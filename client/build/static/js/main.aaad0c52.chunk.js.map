{"version":3,"sources":["components/LoginForm.jsx","components/SignupForm.jsx","components/Notification.jsx","services/userAdminService.js","services/tempService.js","utils/notify.js","components/UserAdmin.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","handleLogin","handleUsernameChange","handlePasswordChange","username","password","onSubmit","htmlFor","type","name","id","value","onChange","SignupForm","handleSignup","Notification","notification","message","style","success","color","fontStyle","fontSize","error","background","borderStyle","borderRadius","padding","marginBottom","services","login","credentials","a","axios","post","res","data","signup","path","token","setToken","newToken","getAll","get","getOne","create","newObject","config","headers","Authorization","update","put","notify","reset","add","remove","logout","UserAdmin","useState","setUsername","setPassword","setUser","setNewUser","loginVisible","setLoginVisible","signupVisible","setSignupVisible","setNotification","useEffect","loggedInUser","window","localStorage","getItem","user","JSON","parse","tempService","resetNotification","setTimeout","event","preventDefault","userAdminService","setItem","stringify","newUser","console","log","show","formName","onClick","display","target","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaad0c52.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoginForm = ({\n  handleLogin,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleLogin}>\n        <label htmlFor=\"username\">\n          username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          password:\n          <input\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\n\nconst SignupForm = ({\n  handleSignup,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Signup</h2>\n\n      <form onSubmit={handleSignup}>\n        <label htmlFor=\"username\">\n          username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          password:\n          <input\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n        <button type=\"submit\">signup</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n  const { type, message } = notification;\n\n  const styles = {\n    success: {\n      color: \"green\",\n      fontStyle: \"italic\",\n      fontSize: 16,\n    },\n    error: {\n      color: \"red\",\n      background: \"lightgrey\",\n      fontSize: \"20px\",\n      borderStyle: \"solid\",\n      borderRadius: \"5px\",\n      padding: \"10px\",\n      marginBottom: \"10px\",\n    },\n  };\n\n  return <p style={styles[type]}>{message}</p>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst loginPath = \"/api/login\";\nconst signupPath = \"/api/users\";\n\nconst services = {\n  login: async (credentials) => {\n    const res = await axios.post(loginPath, credentials);\n    return res.data;\n  },\n  signup: async (credentials) => {\n    const res = await axios.post(signupPath, credentials);\n    return res.data;\n  },\n};\n\nexport default services;\n","import axios from \"axios\";\nconst path = \"/api/temp\";\n\nlet token = null;\n\nconst services = {\n  setToken: (newToken) => {\n    token = `bearer ${newToken}`;\n  },\n  getAll: async () => {\n    const res = await axios.get(path);\n    return res.data;\n  },\n  getOne: async (id) => {\n    const res = await axios.get(`${path}/${id}`);\n    return res.data;\n  },\n  create: async (newObject) => {\n    const config = {\n      headers: { Authorization: token },\n    };\n\n    const res = await axios.post(path, newObject, config);\n    return res.data;\n  },\n  update: (id, newObject) => {\n    const res = axios.put(`${path}/${id}`, newObject);\n    return res.data;\n  },\n};\n\nexport default services;\n","const notify = (name) => {\n  return {\n    reset: {\n      type: \"\",\n      message: \"\",\n    },\n    success: {\n      add: {\n        type: \"success\",\n        message: \"content successfully added!\",\n      },\n      update: {\n        type: \"success\",\n        message: \"content successfully updated!\",\n      },\n      remove: {\n        type: \"success\",\n        message: \"content successfully removed!\",\n      },\n      signup: {\n        type: \"success\",\n        message: \"signup successfull! you may now login\",\n      },\n      login: {\n        type: \"success\",\n        message: `hello ${name}!`,\n      },\n      logout: {\n        type: \"success\",\n        message: \"logout successfull!\",\n      },\n    },\n    error: {\n      add: {\n        type: \"error\",\n        message: \"sorry, we were unable to add the content\",\n      },\n      update: {\n        type: \"error\",\n        message: \"sorry, we were unable to update the content\",\n      },\n      remove: {\n        type: \"error\",\n        message: \"sorry, we were unable to update the content\",\n      },\n      signup: {\n        type: \"error\",\n        message:\n          \"sorry, we were unable to create your account. you either left a field blank or the username you provided already exists\",\n      },\n      login: {\n        type: \"error\",\n        message: \"invalid username and/or password\",\n      },\n    },\n  };\n};\n\nexport default notify;\n","import React, { useState, useEffect } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport Notification from \"./Notification\";\nimport userAdminService from \"../services/userAdminService\";\nimport tempService from \"../services/tempService\";\nimport notify from \"../utils/notify\";\n\nconst UserAdmin = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [, setUser] = useState(null);\n  const [, setNewUser] = useState(null);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const [signupVisible, setSignupVisible] = useState(false);\n  const [notification, setNotification] = useState(notify().reset);\n\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\n    if (loggedInUser) {\n      const user = JSON.parse(loggedInUser);\n      setUser(user);\n      tempService.setToken(user.token);\n    }\n  }, []);\n  const resetNotification = () => {\n    setTimeout(() => {\n      setNotification(notify().reset);\n    }, 5000);\n  };\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    try {\n      const user = await userAdminService.login({\n        username,\n        password,\n      });\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n      tempService.setToken(user.token);\n      setUser(user);\n      setUsername(\"\");\n      setPassword(\"\");\n      setNotification(notify(user.username).success.login);\n      resetNotification();\n    } catch (err) {\n      setNotification(notify().error.login);\n      resetNotification();\n      throw err;\n    }\n  };\n\n  const handleSignup = async (event) => {\n    event.preventDefault();\n\n    try {\n      const newUser = await userAdminService.signup({\n        username,\n        password,\n      });\n      setNewUser(newUser);\n      setUsername(\"\");\n      setPassword(\"\");\n      setNotification(notify().success.signup);\n      resetNotification();\n    } catch (err) {\n      console.log(err);\n      setNotification(notify().error.signup);\n      resetNotification();\n      throw err;\n    }\n  };\n\n  const show = (formName) => {\n    if (formName === \"login\") {\n      setLoginVisible(true);\n      setSignupVisible(false);\n    } else if (formName === \"signup\") {\n      setLoginVisible(false);\n      setSignupVisible(true);\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <Notification notification={notification} />\n      <button onClick={() => show(\"login\")}>login</button>\n      <button onClick={() => show(\"signup\")}>signup</button>\n      <div style={{ display: loginVisible ? \"\" : \"none\" }}>\n        <LoginForm\n          handleLogin={handleLogin}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          username={username}\n          password={password}\n        />\n      </div>\n      <div style={{ display: signupVisible ? \"\" : \"none\" }}>\n        <SignupForm\n          handleSignup={handleSignup}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          username={username}\n          password={password}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default UserAdmin;\n","import React from \"react\";\nimport UserAdmin from \"./components/UserAdmin\";\nimport \"./App.css\";\n\nfunction App() {\n  // const [content, setContent] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1>App</h1>\n      <UserAdmin />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}